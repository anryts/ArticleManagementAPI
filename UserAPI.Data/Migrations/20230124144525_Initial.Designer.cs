// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserAPI.Data;

#nullable disable

namespace UserAPI.API.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230124144525_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserAPI.Data.Models.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("UserAPI.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8fd66ae6-d36d-4a0a-9f7d-5d7797d6fc58"),
                            Email = "test1@mail.com",
                            Gender = 1,
                            Name = "Anton"
                        },
                        new
                        {
                            Id = new Guid("eedbe32f-05a5-4355-9707-65933032dd7b"),
                            Email = "test2@mail.com",
                            Gender = 1,
                            Name = "Oliwier"
                        },
                        new
                        {
                            Id = new Guid("694d119e-8951-476b-8675-e50b6f0e4595"),
                            Email = "test3@mail.com",
                            Gender = 1,
                            Name = "Roy "
                        },
                        new
                        {
                            Id = new Guid("403d7dc1-7b2e-4fb8-b692-855100f27e92"),
                            Email = "test4@mail.com",
                            Gender = 1,
                            Name = "Abu"
                        },
                        new
                        {
                            Id = new Guid("1020d434-9734-4081-9532-95667395b71e"),
                            Email = "test5@mail.com",
                            Gender = 1,
                            Name = "Craig"
                        },
                        new
                        {
                            Id = new Guid("c442cf8e-1d97-487e-a0b0-5f42a205b3b5"),
                            Email = "test6@mail.com",
                            Gender = 1,
                            Name = "Francesco"
                        },
                        new
                        {
                            Id = new Guid("2e2aa0b3-96c2-4124-b41a-7f668577dde1"),
                            Email = "test7@mail.com",
                            Gender = 1,
                            Name = "Junaid"
                        },
                        new
                        {
                            Id = new Guid("7438e5e7-6d25-4f6a-9bb7-2741c61470e7"),
                            Email = "test8@mail.com",
                            Gender = 1,
                            Name = "Ieuan"
                        },
                        new
                        {
                            Id = new Guid("9a191c8d-086c-460d-a7c1-b27dfe149890"),
                            Email = "test9@mail.com",
                            Gender = 1,
                            Name = "Anika"
                        },
                        new
                        {
                            Id = new Guid("afa67de6-3647-4a90-b859-502397dd6e8e"),
                            Email = "test10@mail.com",
                            Gender = 1,
                            Name = "Jago"
                        },
                        new
                        {
                            Id = new Guid("6b5763f9-0e31-41d3-8d07-7006cd8cc060"),
                            Email = "test11@mail.com",
                            Gender = 2,
                            Name = "Emily"
                        },
                        new
                        {
                            Id = new Guid("3e2e62fc-aa31-48b0-9c4a-e429f81efba6"),
                            Email = "test12@mail.com",
                            Gender = 2,
                            Name = "Edie"
                        },
                        new
                        {
                            Id = new Guid("fbf1f613-51ad-48fa-841b-6b13dd321758"),
                            Email = "test13@mail.com",
                            Gender = 2,
                            Name = "Anaya"
                        },
                        new
                        {
                            Id = new Guid("3c62bf56-9005-41ec-af94-34f4e60a6913"),
                            Email = "test14@mail.com",
                            Gender = 2,
                            Name = "Kiera"
                        },
                        new
                        {
                            Id = new Guid("091f4f08-9e8f-434d-ad24-c841860a0e14"),
                            Email = "test15@mail.com",
                            Gender = 2,
                            Name = "Hermione"
                        },
                        new
                        {
                            Id = new Guid("fc2c999e-720d-47b3-aeb6-b6e214486406"),
                            Email = "test16@mail.com",
                            Gender = 2,
                            Name = "Maariyah"
                        },
                        new
                        {
                            Id = new Guid("5839bbe9-130c-452e-a3f5-48a06e19b98b"),
                            Email = "test17@mail.com",
                            Gender = 2,
                            Name = "Cecil"
                        },
                        new
                        {
                            Id = new Guid("fe96fe91-c809-47da-92b6-9a6ca1cd29f4"),
                            Email = "test18@mail.com",
                            Gender = 2,
                            Name = "Aleesha"
                        },
                        new
                        {
                            Id = new Guid("bf7a0302-0b03-4e65-a91e-edddf80752f1"),
                            Email = "test19@mail.com",
                            Gender = 2,
                            Name = "Mathilda"
                        },
                        new
                        {
                            Id = new Guid("bf43b705-44f3-4dc2-9345-56c3bdc58788"),
                            Email = "test20@mail.com",
                            Gender = 2,
                            Name = "Leyla"
                        });
                });

            modelBuilder.Entity("UserAPI.Data.Models.UserJob", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("UserJob");
                });

            modelBuilder.Entity("UserAPI.Data.Models.UserJob", b =>
                {
                    b.HasOne("UserAPI.Data.Models.Job", "Job")
                        .WithMany("Users")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserAPI.Data.Models.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAPI.Data.Models.Job", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UserAPI.Data.Models.User", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
